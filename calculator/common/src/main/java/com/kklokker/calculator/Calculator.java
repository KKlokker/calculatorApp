package com.kklokker.calculator;

import static com.codename1.ui.CN.*;
import com.codename1.system.Lifecycle;
import com.codename1.ui.*;
import com.codename1.ui.layouts.*;
import com.codename1.io.*;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.ui.plaf.*;
import com.codename1.ui.util.Resources;

import javax.swing.*;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose
 * of building native mobile applications using Java.
 */
public class Calculator extends Lifecycle {
    String equation;
    double result;
    Label display;
    Form calc;

    @Override
    public void runApp() {
        equation = "";
        result = 0;
        calc = new Form("Calculator", BoxLayout.y());
        GridLayout keys = new GridLayout(6,3);
        Container keypad = new Container(keys);


        display = new Label();
        display.setUIID("display");
        display.setText("0");
        calc.add(display);
        Button clearButton = new Button("C");
        keypad.add(clearButton);
        clearButton.addActionListener(e -> {equation = " ";updateDisplay();});
        calc.add(keypad);
        char[] buttons = new char[]{'%', '/', 'x', '-', '+', '7', '8', '9','4','5','6','1','2','3','0'};
        for(char type: buttons) {
            Button numberButton = new Button("" + type);
            keypad.add(numberButton);
            numberButton.addActionListener(e -> {equation = equation + type; updateDisplay();});
        }
        Button equalButton = new Button("=");
        keypad.add(equalButton);
        equalButton.addActionListener(e -> {calcResult();});
        Button delete = new Button("<-");
        keypad.add(delete);
        delete.addActionListener(e -> {equation = equation.substring(0,equation.length()-1);updateDisplay();});
        calc.show();
    }

    private void updateDisplay() {
        display.setText(equation);
        calc.revalidateWithAnimationSafety();
    }

    private void calcResult() {
        try {
            result = Calc.compute(equation);
            display.setText(Double.toString(result));
        }
        catch(java.lang.NumberFormatException e) {
            result = 0;
            display.setText("Error invalid input");
        }
        catch(java.lang.ArrayIndexOutOfBoundsException e) {
            result = 0;
            display.setText("Error invalid input");
        }
        calc.revalidateWithAnimationSafety();
        equation = "";
    }
    private void hello() {
        Dialog.show("Hello Codename One", "Welcome to Codename One", "OK", null);
    }

}
